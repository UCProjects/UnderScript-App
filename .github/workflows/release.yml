name: Auto-publish
on: 
  push:
    branches:
      - master
jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.check.outputs.changed }}
      version: ${{ steps.check.outputs.version }}
      commit: ${{ steps.check.outputs.commit }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Check version changes
      uses: EndBug/version-check@v1
      id: check
  release:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.changed == 'true'
    outputs:
      id: ${{ steps.release.outputs.id }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: ${{ needs.check.outputs.commit }}
    - name: Parse Changelog # Exits if changelog not found
      id: changelog
      env:
        INPUT_VERSION: ${{ needs.check.outputs.version }}
      run: node ./scripts/changelog
    - name: Tag and Release
      uses: avakar/tag-and-release@v1
      with:
        tag_name: ${{ needs.check.outputs.version }}
        commit: ${{ needs.check.outputs.commit }}
        body: ${{ steps.changelog.outputs.changes }}
        draft: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: release
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
    needs: [check, release]
    steps: 
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.check.outputs.commit }}
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16'
          registry-url: "https://registry.npmjs.org"
      - name: Install dependencies
        run: npm install
      - name: Build and Publish
        run: npm run dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish-release:
    needs: [release, build]
    runs-on: ubuntu-latest
    steps:
      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.release.outputs.id }}
